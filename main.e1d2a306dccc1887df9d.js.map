{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["constructor","selector","targetDate","this","refs","days","document","querySelector","hours","mins","secs","timerOver","dateTimer","setInterval","time","getTime","Date","now","day","Math","floor","hour","min","sec","updateTimer","textContent","nums","num"],"mappings":"kHAAA,4B,mBC8Cc,IA9Cd,MACEA,aAAY,SAAEC,EAAF,WAAYC,IAEtBC,KAAKD,WAAaA,EAElBC,KAAKC,KAAO,CACVC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,UAAWL,SAASC,cAAc,wBAGtCK,YACEC,YAAY,KAGV,IACIC,EAHYX,KAAKD,WAAWa,UAElBC,KAAKC,MAGnB,GAAIH,EAAO,EAAG,CACZ,MAAMI,EAAMC,KAAKC,MAAMN,EAAO,OACxBO,EAAOF,KAAKC,MACfN,EAAO,MAAR,MAEIQ,EAAMH,KAAKC,MAAON,EAAO,KAAR,KACjBS,EAAMJ,KAAKC,MAAON,EAAO,IAAe,KAE9CX,KAAKqB,YAAYrB,KAAKC,KAAKM,KAAMa,GACjCpB,KAAKqB,YAAYrB,KAAKC,KAAKK,KAAMa,GACjCnB,KAAKqB,YAAYrB,KAAKC,KAAKI,MAAOa,GAClClB,KAAKqB,YAAYrB,KAAKC,KAAKC,KAAMa,QAEjCf,KAAKC,KAAKO,UAAUc,YAAe,iBAEpC,KAELD,YAAYE,EAAMC,GAEdD,EAAKD,YADHE,GAAO,EACU,IAAMA,EAENA,IAKQ,CAC/B1B,SAAU,WACVC,WAAY,IAAIc,KAAK,kBAGjBJ,c","file":"main.e1d2a306dccc1887df9d.js","sourcesContent":["import './styles.css';\r\nimport './js/timer';","class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    //this.selector = selector;\r\n    this.targetDate = targetDate;\r\n\r\n    this.refs = {\r\n      days: document.querySelector('[data-value=\"days\"]'),\r\n      hours: document.querySelector('[data-value=\"hours\"]'),\r\n      mins: document.querySelector('[data-value=\"mins\"]'),\r\n      secs: document.querySelector('[data-value=\"secs\"]'),\r\n      timerOver: document.querySelector('[data-value=\"over\"]'),\r\n    };\r\n  }\r\n  dateTimer() {\r\n    setInterval(() => {\r\n      const endDate = this.targetDate.getTime();\r\n\r\n      let nowTime = Date.now();\r\n      let time = endDate - nowTime;\r\n\r\n      if (time > 0) {\r\n        const day = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        const hour = Math.floor(\r\n          (time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n        );\r\n        const min = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n        const sec = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n        this.updateTimer(this.refs.secs, sec);\r\n        this.updateTimer(this.refs.mins, min);\r\n        this.updateTimer(this.refs.hours, hour);\r\n        this.updateTimer(this.refs.days, day);\r\n      } else {\r\n        this.refs.timerOver.textContent = `Timer is over`;\r\n      }\r\n    }, 1000);\r\n  }\r\n  updateTimer(nums, num) {\r\n    if (num <= 9) {\r\n      nums.textContent = '0' + num;\r\n    } else {\r\n      nums.textContent = num;\r\n    }\r\n  }\r\n}\r\n\r\nconst start = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('may 28, 2021'),\r\n});\r\n\r\nstart.dateTimer();\r\n"],"sourceRoot":""}